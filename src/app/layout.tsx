import type { Metadata } from "next";
import { Geist, Geist_Mono, Roboto } from "next/font/google";
import "./globals.css";
import { unstable_ViewTransition as ViewTransition } from 'react';
import Link from "next/link";
import Image from "next/image";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

const robotoFont = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

const navigations = [
  { label: 'Trang chủ', href: '/' },
  { label: 'Thể loại', href: '/' },
  { label: 'Phim bộ', href: '/' },
  { label: 'Phim lẻ', href: '/' },
  { label: 'Quốc gia', href: '/' },
]
export default function RootLayout({ children, params }: Readonly<{ children: React.ReactNode, params: { slug?: string }}>) {
  return (
    <html lang="en">
      <body className={`${robotoFont.variable} antialiased`}>
        <header className="bg-[#0e0e0e] ">
            <div className="container mx-auto px-4">
              <div className="flex items-center justify-between gap-6 h-16">
                <Image 
                  src={'/logo.png'} 
                  alt="logo"
                  width={100}
                  height={100}
                  className="h-full w-auto"
                />
                <div className="h-full flex items-center">
                  {navigations.map((item, i) => (
                    <Link key={i} href={item.href} className="text-shadow-white font-[500] py-4 px-4 inline-block text-[18px]">{item.label}</Link>
                  ))}
                </div>
    
                <input type="search" defaultValue={'ok'}/>
              </div>
            </div>
          </header>
        <div className="container mx-auto">
          
          <ViewTransition key={params?.slug || 'root'}>
            {children}
          </ViewTransition>
        </div>
      </body>
    </html>
  );
}
